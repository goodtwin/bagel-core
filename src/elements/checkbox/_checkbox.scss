@mixin checkbox-src {
  /**
    * @name Checkbox
    * @description Checkbox includes styles for both checkbox input and radio inputs.
    *
    * @section components.checkbox.index
    *
    *
    * @markup
    *   <div class="ui checkbox">
    * 		<input type="checkbox" name="checkbox" id="checkbox" />
    * 		<label for="checkbox">Checkbox</label>
    * 	</div>
    */
  .ui.checkbox {
    position: relative;
    display: inline-block;
    outline: none;
    vertical-align: middle;
    input {
      position: absolute;
      top: 0px;
      left: 0px;
      opacity: 0;
      outline: none;
    }
    .box,
    label {
      cursor: pointer;
      outline: none;
    }
    .box:before,
    label:before {
      position: absolute;
      top: 0;
      left: 0;
      line-height: 1;
      content: '';
    }
    .box:after,
    label:after {
      opacity: 0;
      position: absolute;
      background: transparent;

    }
    .box:after,
    label:after {
      top: 0;
      left: 0;
    }
    + label {
      vertical-align: middle;
    }
  }

  .ui.checkbox input:checked + .box:after,
  .ui.checkbox input:checked + label:after {
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
    filter: alpha(opacity=100);
    opacity: 1;
  }

  /**
    * @name Checkbox - Disabled
    * @description Checkboxes can be disabled.
    *
    * @section components.checkbox.disabled
    *
    *
    * @markup
    *   <div class="ui checkbox">
    * 		<input type="checkbox" name="checkbox" id="checkboxd1" disabled />
    * 		<label for="checkboxd1">Checkbox</label>
    * 	</div>
    */
  .ui.checkbox input[disabled] + .box:after,
  .ui.checkbox input[disabled] + label {
    opacity: 0.4;
    color: rgba(0, 0, 0, 0.3);
  }

  /**
    * @name Checkbox - Radiobox
    * @description Checkbox includes styles radio inputs.
    *
    * @section components.checkbox.radio
    *
    *
    * @markup
    *		<fieldset class="grouped inline fields">
    *			<div class="field">
    *				<div class="ui radio checkbox">
    *					<input type="radio" name="fruit" id="apples" checked />
    *					<label for="apples">Apples</label>
    *				</div>
    *			</div>
    *			<div class="field">
    *				<div class="ui radio checkbox">
    *					<input type="radio" name="fruit" id="oranges" />
    *					<label for="oranges">Oranges</label>
    *				</div>
    *			</div>
    *			<div class="field">
    *				<div class="ui radio checkbox">
    *					<input type="radio" name="fruit" id="pears" />
    *					<label for="pears">Pears</label>
    *				</div>
    *			</div>
    *			<div class="field">
    *				<div class="ui radio checkbox">
    *					<input type="radio" name="fruit" id="grapefruit" />
    *					<label for="grapefruit">Grapefruit</label>
    *				</div>
    *			</div>
    *		</fieldset>
    */
  .ui.radio.checkbox{
    .box:before,
    label:before {
      border-radius: 500px;
      transform: none;
    }
    .box:after,
    label:after {
      content: '';
      border: none;
      transform: none;
      border-radius: 500px;
    }
  }

  /**
    * @name Checkbox - Slider
    * @description Checkboxes can appear as a slideable control.
    *
    * @section components.checkbox.slider
    *
    *
    * @markup
    *   <div class="ui slider checkbox">
    * 		<input type="checkbox" name="checkbox" id="checkboxs1" />
    * 		<label for="checkboxs1">Checkbox</label>
    * 	</div>
    */
  .ui.slider.checkbox {
    cursor: pointer;
    min-width: 3em;
    &:after {
      position: absolute;
      left: 0;
      content: '';
    }
    .box:before,
    label:before {
      cursor: pointer;
      display: block;
      position: absolute;
      left: 0;
      z-index: 1;
      transform: none;
    }
    .box:after,
    label:after {
      opacity: 1;
      position: absolute;
      content: '';
      left: 0;
      z-index: 2;
      border: none;
      transform: none;
    }
    input:checked + .box:before,
    input:checked + label:before,
    input:checked + .box:after,
    input:checked + label:after {
      left: 1.75em;
    }
  }

  /**
    * @name Checkbox - Toggle
    * @description Checkboxes can appear as toggleable controls.
    *
    * @section components.checkbox.toggle
    *
    *
    * @markup
    *   <div class="ui toggle checkbox">
    * 		<input type="checkbox" name="checkbox" id="checkboxt1" />
    * 		<label for="checkboxt1">Checkbox</label>
    * 	</div>
    */
  .ui.toggle.checkbox {
    cursor: pointer;
    .box:before,
    label:before {
      cursor: pointer;
      display: block;
      position: absolute;
      content: '';
      left: 0;
      z-index: 1;
      transform: none;
    }
    .box:after,
    label:after {
      opacity: 1;
      content: '';
      position: absolute;
      left: 0.5em;
      z-index: 2;
      border: none;
    }
    input:checked + .box:after,
    input:checked + label:after {
      left: 1.75em;
    }
  }
}
